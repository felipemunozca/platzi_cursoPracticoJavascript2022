21/27 Lista de productos: HTML a partir de arrays



En esta sesion, vamos a copiar el codigo de clase6.html y lo pegaramos en el archivo que llevamos hasta ahora.

El codigo ya viene seccionado dentro de la etiqueta <section> por lo que se debe pegar debajo de la etiqueta <aside>

Por defecto, el listado de productos que trae el archivo clase6.html son todos copiados y pegados, creando un codigo que se repite. Utilizando javascript, se rellenara la informacion de los card directamente desde una API y asi no seran escritos en el html, por lo que debo borrar todos los card, salvo 1 que sera la guia para construir la card desde js.

El codigo para renderizar los valores de un arreglo directo en el archivo index.html es el siguiente:

    const cardsContainer = document.querySelector('.cards-container');


    /* Creo un arreglo vacio, donde despues le agregare el listado de productos, como si fuera una api. */
    const productList = [];

    /* utilizando el metodo push() agrego los productos al array. */
    productList.push({
        name: 'Bicicleta',
        price: 120,
        image: 'https://images.pexels.com/photos/276517/pexels-photo-276517.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940',
    });
    productList.push({
        name: 'Monitor',
        price: 220,
        image: 'https://images.pexels.com/photos/1029757/pexels-photo-1029757.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1',
        
    });
    productList.push({
        name: 'Smartphone',
        price: 620,
        image: 'https://images.pexels.com/photos/47261/pexels-photo-47261.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1',
    });
    productList.push({
        name: 'Reloj',
        price: 50,
        image: 'https://images.pexels.com/photos/277390/pexels-photo-277390.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1',
    });

    /* Creo una nueva funcion que se encargara de renderizar todo el contenido del arreglo dentro del archivo index.html */
    function renderProducts() {

        /* Existe otra forma de utilizar el ciclo for, en vez de agregar un index e ir sumando de 1 a cada vuelta del ciclo, se puede utilizar "for of" agregando un valor que lea todo un arreglo de objetos. */
        for (producto of productList) {
            /* Ahora que tengo el ciclo creado para recorrer el arreglo, debo crear la estructura HTML para imprimir la informacion en la vista del index. */

            // Creo una variable que se convertira en una etiqueta <div> y luego le asigno una clase a al div.
            const productCard = document.createElement('div');
            productCard.classList.add('product-card');

            // Para comenzar a cargar la informacion del arreglo en lo que sera el codigo HTML, debo utilizar el formato del index que utilice en el for of, en este caso "producto" luego un punto . y el nombre de la propiedad del objeto que quiero obtener.
            // Por ejemplo = producto.name - producto.price - producto.image
            // Se crea una nueva variable para la etiqueta <img> y como atributo se le pasa un source o src mas el valor que tiene producto.image en el arreglo.
            const productImg = document.createElement('img');
            productImg.setAttribute('src', producto.image);

            const productInfo = document.createElement('div');
            productInfo.classList.add('product-info');

            const productInfoDiv = document.createElement('div');

            // Creo una nueva etiqueta <p> a la que se le pasara el valor que tenga producto.price en el arreglo. Ademas del precio, se le concatena el icono de peso.
            const productPrice = document.createElement('p');
            productPrice.innerText = '$' + producto.price;
            // Creo una nueva etiqueta <p> a la que se le pasara el valor que tenga producto.name en el arreglo.
            const productName = document.createElement('p');
            productName.innerText = producto.name;

            productInfoDiv.appendChild(productPrice);
            productInfoDiv.appendChild(productName);

            // Se crea la etiqueta <figure> que dentro tendra una etiqueta <img> a la cual se le cargara el icono de carrito de compra que ya tenemos en las carpetas del proyecto, por lo que se debe escribir la ruta para llegar a dicha imagen.
            const productInfoFigure = document.createElement('figure');
            const productImgCart = document.createElement('img');
            productImgCart.setAttribute('src', './icons/bt_add_to_cart.svg');

            // Una vez que la maquetacion se completo, debemos indicarle a javascript en que posicion se deben rendizaron las etiquetas ya creadas, para esto utilizaremos el metodo .appendChild()
            // Al utilizar este metodo comienzo a insertar las etiquetas de hijos a padres, es decir, desde las que estan mas adentro hacia afuera.

            productInfoFigure.appendChild(productImgCart);

            productInfo.appendChild(productInfoDiv);
            productInfo.appendChild(productInfoFigure);

            productCard.appendChild(productImg);
            productCard.appendChild(productInfo);

            cardsContainer.appendChild(productCard);
        }

    }